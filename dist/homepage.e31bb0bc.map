{"version":3,"sources":["index.js"],"names":["visit","vc","document","getElementById","u","console","log","fetch","method","mode","cache","credentials","redirect","referrer","then","res","ok","json","Error","innerHTML","visits","catch","error","createFolder","cf","cfm","data","foldername","value","headers","body","JSON","stringify","status","addEventListener","e","preventDefault"],"mappings":";AAEA,SAASA,IACHC,IAAAA,EAAKC,SAASC,eAAe,cAC7BC,EAAJ,GAAA,OAAA,mCAAA,6BACFC,QAAQC,IAAIF,GACVG,MAAMH,EAAG,CACPI,OAAQ,MACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SAAU,SACVC,SAAU,gBAEXC,KAAK,SAAAC,GACAA,GAAAA,EAAIC,GAAI,OAAOD,EAAIE,OACjB,MAAA,IAAIC,MAAM,kCAEjBJ,KAAK,SAAAC,GACJd,EAAGkB,UAAYJ,EAAIK,SAEpBC,MAAM,SAAAC,GACLrB,EAAGkB,UAAY,IACfd,QAAQiB,MAAMA,KAIlB,SAASC,IACHC,IAAAA,EAAKtB,SAASC,eAAe,qBAC7BsB,EAAMvB,SAASC,eAAe,mBAC9BuB,EAAO,CAAEC,WAAYH,EAAGI,OAC5BrB,MAAM,wBAAyB,CAC7BC,OAAQ,OACRC,KAAM,OACNC,MAAO,WACPC,YAAa,cACbkB,QAAS,CACS,eAAA,mCAGlBjB,SAAU,SACVC,SAAU,cACViB,KAAMC,KAAKC,UAAUN,KAEtBZ,KAAK,SAAAC,GAAOA,OAAAA,EAAIE,SAChBH,KAAK,SAAAC,GACJU,EAAIN,UAAYJ,EAAIkB,SAErBZ,MAAM,SAAAC,GAASjB,OAAAA,QAAQiB,MAAM,SAAUA,KAIxCtB,IACAE,SAASC,eAAe,sBAAsB+B,iBAAiB,QAAS,SAASC,GAC/EA,EAAEC,iBACFb","file":"homepage.e31bb0bc.map","sourceRoot":"..","sourcesContent":["/* global fetch */\n\nfunction visit() {\n  let vc = document.getElementById(\"visitCount\");\n  let u = `${process.env.ENDPOINT_PREFIX}/.netlify/functions/visit`;\nconsole.log(u);\n  fetch(u, {\n    method: \"GET\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"same-origin\",\n    redirect: \"follow\", // manual, *follow, error\n    referrer: \"no-referrer\", // no-referrer, *client\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    throw new Error('Network response was not ok.');\n  })\n  .then(res => {\n    vc.innerHTML = res.visits;\n  })\n  .catch(error => {\n    vc.innerHTML = '-';\n    console.error(error);\n  });\n}\n\nfunction createFolder() {\n  let cf = document.getElementById(\"createFolderInput\");\n  let cfm = document.getElementById(\"createFolderMsg\");\n  let data = { foldername: cf.value };\n  fetch('/dropbox/createfolder', {\n    method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n    mode: \"cors\", // no-cors, cors, *same-origin\n    cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: \"same-origin\", // include, same-origin, *omit\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      //\"Content-Type\": \"application/x-www-form-urlencoded\",\n    },\n    redirect: \"follow\", // manual, *follow, error\n    referrer: \"no-referrer\", // no-referrer, *client\n    body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n  })\n  .then(res => res.json())\n  .then(res => {\n    cfm.innerHTML = res.status;\n  })\n  .catch(error => console.error('Error:', error));\n}\n\n(function(){\n  visit();\n  document.getElementById(\"createFolderSubmit\").addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    createFolder();\n  });\n})();"]}